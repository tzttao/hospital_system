<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/aop
			http://www.springframework.org/schema/aop/spring-aop.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.model">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Component" />
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Repository" />
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Service" />
    </context:component-scan>

    <!-- 加载配数据源配置文件 db.properties -->
    <context:property-placeholder location="classpath:jdbc.properties" />

    <!-- 配置 C3P0 数据源 -->

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>



    <!-- 事务管理器 （JDBC） -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 启动声明式事务驱动 -->
    <tx:annotation-driven transaction-manager="transactionManager" />


    <!-- spring 通过 sqlSessionFactoryBean 获取 sqlSessionFactory 工厂类 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!-- 扫描 pojo 包，使用别名 -->
        <property name="typeAliasesPackage" value="com.model"></property>
        <!-- 扫描映射文件 -->
        <property name="mapperLocations" >
            <array>
                <value>classpath:mapper/**/*.xml</value>
            </array>
        </property>
    </bean>

    <!-- 配置扫描 dao 包，动态实现 dao 接口，注入到 spring 容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.dao" />
        <!-- 注意使用 sqlSessionFactoryBeanName 避免出现spring 扫描组件失效问题 -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>


</beans>